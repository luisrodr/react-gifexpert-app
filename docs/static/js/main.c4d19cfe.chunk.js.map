{"version":3,"sources":["component/Addcategory.js","helpers/getGifs.js","component/GridGifItem.js","component/GifGrid.js","hooks/useFtechsGrids.js","component/GifespertApp.js","index.js"],"names":["Addcategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","arr","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridGifItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFtechsGrids","GifexpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAqDeA,EA/CY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KA2B5C,OACI,sBAAMC,SAjBS,SAACC,GAChBA,EAAEC,iBACFC,QAAQC,IAAI,gBAERN,EAAWO,OAAOC,OAAO,IAEzBV,GAAc,SAAAW,GAAG,MAAE,MACnBX,GAAc,SAAAW,GAAG,OAAGT,GAAH,mBAAiBS,OAClCR,EAAc,MASlB,SAEI,uBACIS,KAAK,OACLC,MAAOX,EACPY,SA7BY,SAACT,GAErBF,EAAcE,EAAEU,OAAOF,a,+BCVlBG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACXC,EADW,gDACkCC,UAAUH,GAD5C,+DAECI,MAAMF,GAFP,cAEXG,EAFW,gBAGGA,EAAKC,OAHR,uBAGVC,EAHU,EAGVA,KAEPjB,QAAQC,IAAI,qBAAqBW,GAE3BM,EAAMD,EAAKE,KAAI,SAAAC,GACjB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QAXvB,kBAiBVM,GAjBU,4CAAD,sDCaLO,EAbY,SAAC,GAAkB,IAAjBb,EAAgB,EAAhBA,IAAIU,EAAY,EAAZA,MAI7B,OACI,sBAAKI,UAAU,yCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCyBAO,EA3BQ,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECJT,SAACA,GAAc,IAAD,EACdhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAQ,IAH4B,mBACjCC,EADiC,KAC1BC,EAD0B,KA0BxC,OAnBAC,qBAAU,WAGFxB,EAAQC,GACPwB,MAAK,SAAAC,GAGFH,EAAS,CACLf,KAAKkB,EACLJ,OAAM,SAOpB,CAACrB,IAGIqB,EDlB0BK,CAAe1B,GAAhCa,EAJmB,EAIxBN,KAAYa,EAJY,EAIZA,QAInB,OAFA9B,QAAQC,IAAI6B,GAGR,qCACI,6BAAKpB,IACJoB,GAAS,mBAAGJ,UAAU,mCAAb,yBAEV,qBAAKA,UAAU,oCAAf,SAESH,EAAOJ,KAAI,SAACC,GAAD,OACJ,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEQ9BgB,EA5BM,WAAM,IAAD,EAGc3C,mBAAS,IAHvB,mBAGf4C,EAHe,KAGH7C,EAHG,KAMtB,OACI,qCAGI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEI6C,EAAWnB,KAAI,SAAAT,GAAQ,OAEnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,U,MCjB7B6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.c4d19cfe.chunk.js","sourcesContent":["import React,{useState}  from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n//rafc\r\nexport const Addcategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange=(e)=>{\r\n        \r\n        setInputValue(e.target.value);\r\n\r\n    };\r\n\r\n    //enter .previene refresco del explorador\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        console.log('submit hecho');\r\n\r\n        if (inputValue.trim().length>0){\r\n            //ya que no tenemos acceso al arreglo desde aca\r\n            setCategories(arr=>[]);\r\n            setCategories(arr=>[inputValue,...arr]);\r\n            setInputValue(\"\");\r\n            // console.log(\"agregado ...\",e.target.value);  \r\n        };\r\n            \r\n        \r\n    };\r\n    \r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit} > \r\n            \r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        \r\n    );\r\n};\r\n\r\n\r\n\r\n//se obliga a tener este prop\r\nAddcategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n};\r\n\r\nexport default Addcategory;\r\n\r\n","\r\n\r\nexport const getGifs=async(category)=>{\r\n    const url=`http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=hdoXppmlco2Ed1T6UNYjVk0AcS14X0sM`;\r\n    const resp =await fetch(url);\r\n    const {data} =await resp.json();\r\n\r\n    console.log(\"getGif datos......\",url);\r\n   \r\n    const gifs =data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_medium.url\r\n            \r\n        };\r\n    });\r\n    \r\n    //console.log(\"DATOS...\",gifs);\r\n    return gifs;\r\n};\r\n\r\n","import React from 'react'\r\n\r\nexport const GridGifItem = ({url,title} ) => {\r\n\r\n   // console.log(img);\r\n     \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={url} alt={title}></img>\r\n           <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default GridGifItem;","import React from 'react';\r\nimport { useFtechsGrids } from '../hooks/useFtechsGrids';\r\nimport GridGifItem from './GridGifItem';\r\n\r\n//import {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n\r\n        const {data:images,loading} =useFtechsGrids(category);\r\n\r\n        console.log(loading);\r\n        \r\n        return (\r\n            <>\r\n                <h3>{category}</h3>\r\n                {loading&&<p className=\"animate__animated animate__flash\" >Cargando...</p>}\r\n            \r\n                <div className=\"animate__animated animate__fadeIn\" >\r\n                \r\n                        {images.map((img) =>\r\n                                <GridGifItem \r\n                                    key={img.id}    \r\n                                    {...img}\r\n                                />\r\n                        )}\r\n                    \r\n                </div>\r\n            </>\r\n        );\r\n};\r\n\r\nexport default GifGrid;","import {useEffect, useState} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFtechsGrids = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n     \r\n            getGifs(category)\r\n            .then(imgs=>{\r\n\r\n                //console.log(imgs)\r\n                setState({\r\n                    data:imgs,\r\n                    state:false\r\n                })\r\n            })\r\n\r\n\r\n\r\n\r\n    },[category]);\r\n\r\n\r\n    return state;\r\n};\r\n","import React,{useState} from 'react';\r\nimport Addcategory from './Addcategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifexpertApp = () =>{\r\n   \r\n    \r\n    const [categories, setCategories] = useState([]);\r\n\r\n\r\n    return(\r\n        <>\r\n        \r\n           \r\n            <h2>GifexpertApp</h2>\r\n            <Addcategory setCategories={setCategories}/>\r\n\r\n            <br/>\r\n            {\r\n                categories.map(category=>(\r\n\r\n                    <GifGrid \r\n                        key={category}\r\n                        category={category}\r\n                    />\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default GifexpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifexpertApp from './component/GifespertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifexpertApp />,\n\n  document.getElementById('root')\n);\n//api FzG06Qp5557pTs5JwuIokYo2jz74KFQW\n\n\n\n//GifexpertApp\n//h2\n//<br/>\n\n\n"],"sourceRoot":""}